<<<<<<< HEAD
﻿<Project ToolsVersion="4.5" DefaultTargets="Default" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Overriding the Microsoft.CSharp.targets target dependency chain -->
  <!-- Call our custom AssemblyVersion target before build, even from VS -->

  <PropertyGroup>
=======
﻿<Project ToolsVersion="4.0" DefaultTargets="Default" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Overriding the Microsoft.CSharp.targets target dependency chain -->
  <!-- Call our custom AssemblyVersion target before build, even from VS -->

  <!--<PropertyGroup>
>>>>>>> Added file Build.props that contains all the variables that might be different for all branches.
    <BuildDependsOn>
      AssemblyVersion;
      $(BuildDependsOn)
    </BuildDependsOn>
<<<<<<< HEAD
  </PropertyGroup>

  <UsingTask
    TaskName="GenerateAssemblyInfo"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup>
      <PathToAssemblyInfo ParameterType="System.String" Required="true"/>
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        var assemblyInfoContent = new[]
            {
                "//--------------------------------------------------------------------------------------",
                "// This file is auto generated by AssemblyInfo.targets on Release build configuration.",
                "//--------------------------------------------------------------------------------------",
                "[assembly: System.Reflection.AssemblyTitle(\"$(ModuleName)\")]",
                "[assembly: System.Reflection.AssemblyDescription(\"$(ModuleDescription)\")]",
                "[assembly: System.Reflection.AssemblyCompany(\"$(ModuleCompany)\")]",
                "[assembly: System.Reflection.AssemblyProduct(\"$(ModuleProduct)\")]",
                "[assembly: System.Reflection.AssemblyCopyright(\"$(ModuleCopyright)\")]",
                "[assembly: System.Reflection.AssemblyVersion(\"$(ShortModuleVersion)\")]",
                "[assembly: System.Reflection.AssemblyFileVersion(\"$(ShortModuleVersion)\")]",
                "[assembly: System.Reflection.AssemblyInformationalVersion(\"$(ShortModuleVersion)\")]"
            };

            System.IO.File.WriteAllLines(PathToAssemblyInfo, assemblyInfoContent);
]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="AssemblyVersion">
    <PropertyGroup>
      <AssemblyInfoFile>$(MSBuildProjectDirectory)\Properties\AssemblyInfo.cs</AssemblyInfoFile>
    </PropertyGroup>
    <GenerateAssemblyInfo PathToAssemblyInfo="$(AssemblyInfoFile)"/>
=======
  </PropertyGroup>-->

  <ItemGroup>
    <AssemblyVersionFiles Include="$(MSBuildProjectDirectory)\Properties\AssemblyInfo.cs"/>
  </ItemGroup>

  <Target Name="AssemblyVersion"
          Inputs="@(AssemblyVersionFiles)"
          Outputs="UpdatedAssemblyVersionFiles">
    <Attrib Files="%(AssemblyVersionFiles.FullPath)"
            Normal="true"/>
    <AssemblyInfo CodeLanguage="CS"
                  OutputFile="%(AssemblyVersionFiles.FullPath)"
                  AssemblyTitle="$(ModuleName)"
                  AssemblyDescription="$(ModuleDescription)"
                  AssemblyCompany="$(ModuleCompany)"
                  AssemblyProduct="$(ModuleProduct)"
                  AssemblyCopyright="$(ModuleCopyright)"
                  AssemblyVersion="$(Version)"
                  AssemblyFileVersion="$(Version)">
      <Output TaskParameter="OutputFile"
              ItemName="UpdatedAssemblyVersionFiles"/>
    </AssemblyInfo>
>>>>>>> Added file Build.props that contains all the variables that might be different for all branches.
  </Target>
</Project>