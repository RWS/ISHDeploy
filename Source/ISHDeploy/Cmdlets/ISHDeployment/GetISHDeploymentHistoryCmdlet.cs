using System.Management.Automation;
using ISHDeploy.Business.Operations;
using ISHDeploy.Data.Actions.File;

namespace ISHDeploy.Cmdlets.ISHDeployment
{
    /// <summary>
    /// <para type="synopsis">Gets customization history for Content Manager deployment.</para>
    /// <para type="description">The Get-ISHDeploymentHistory cmdlet gets the customization history information for Content Manager deployment that was generated by other cmdlets.</para>
    /// <para type="link">Clear-ISHDeploymentHistory</para>
    /// <para type="link">Get-ISHDeployment</para>
    /// <para type="link">Undo-ISHDeployment</para>
    /// </summary>
    /// <example>
    /// <code>PS C:\>Get-ISHDeploymentHistory -ISHDeployment $deployment</code>
    /// <para>This command gets the history information for Content Manager deployment.
    /// Parameter $deployment is an instance of the Content Manager deployment retrieved from Get-ISHDeployment cmdlet.</para>
    /// </example>
    [Cmdlet(VerbsCommon.Get, "ISHDeploymentHistory")]
    [OutputType(typeof(string))]
    public class GetISHDeploymentHistoryCmdlet : BaseISHDeploymentCmdlet
    {
        /// <summary>
        /// Executes cmdlet
        /// </summary>
        public override void ExecuteCmdlet()
        {
            var historyContent = string.Empty;

            var action = new FileReadAllTextAction(Logger, OperationPaths.HistoryFilePath, result => historyContent = result);
            action.Execute();

            if (string.IsNullOrEmpty(historyContent))
            {
				Logger.WriteVerbose($"History file is empty.");
                return;
            }

            WriteObject(historyContent);
        }
    }
}
