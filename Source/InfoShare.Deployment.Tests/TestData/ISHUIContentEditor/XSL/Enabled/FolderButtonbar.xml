<?xml version="1.0" encoding="UTF-8"?>
<BUTTONBAR>
	<BUTTON>
		<!--This button has no INPUT element so this scripts are always present -->
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<CARDTYPE>VDOCTYPETEMPLATE</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEREFERENCE</CARDTYPE>
		<CARDTYPE>VDOCTYPEQUERY</CARDTYPE>
		<CARDTYPE>VDOCTYPEPUBLICATION</CARDTYPE>
		<SCRIPT language="javascript" src="DocumentOperation.js"/>
		<script language="javascript" type="text/javascript" src="./scripts/infoShareAuthor.js"> </script>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		
		var ishTop = getIShTopWindow();
		var InfoShareXopus = ishTop.InfoShareXopus;		
		var params = InfoShareXopus.parseMandatoryParams();				

		function deselectAll()
		{
			var oColl = parent.DataFrame.document.images;
			if (oColl != null){
				if (oColl.length != null)
					for (var i=0; i < oColl.length;i++)
					{
						oColl[i].src = parent.DataFrame.Gifs[0].src;
					}
			}	
			
			//20051109 RS: Clean existing list completely.
			parent.DataFrame.aDragLogicalArray.splice(0,parent.DataFrame.aDragLogicalArray.length);
			parent.DataFrame.bLogicalFirst = true;
			parent.DataFrame.LogicalCurrent = new Image() ;
		}

		function selectAll()
		{
			//20051109 RS: First clean existing list before all are selected.
			parent.DataFrame.aDragLogicalArray.splice(0,parent.DataFrame.aDragLogicalArray.length);
			parent.DataFrame.bLogicalCurrentPresent = false ; 
			parent.DataFrame.bLogicalFirst= false  ;
			parent.DataFrame.LogicalCurrent = "" ;

			//20051109 RS: END OF First clean existing list before all are selected.
			var oColl = parent.DataFrame.document.images;
			if (oColl != null){
				if (oColl.length != null)
					for (var i=0; i < oColl.length;i++)
					{
						oColl[i].src = parent.DataFrame.Gifs[1].src;
						parent.DataFrame.aDragLogicalArray[parent.DataFrame.aDragLogicalArray.length] = "logical" + "|" + oColl[i].id;
					}
					parent.DataFrame.bLogicalFirst = false;
					parent.DataFrame.LogicalCurrent = new Image() ;
			}	
		}

		function getIndexById(sId)
			{
				var LngVersionIds = parent.DataFrame.LngVersionIds;
				
				for (i = 0; i < LngVersionIds.length; i++)
				{
					if (LngVersionIds[i] == sId)
						return i;
				}
				return -1;
			}
			
			function getSelectedTop() 
			{
				if( parent.DataFrame.GetCurrent ) 
				{
					TopElement = parent.DataFrame.GetCurrent('logical') ;
				}
				else
				{
					TopElement = -1 ;
				}
			
				return TopElement ;
			}
		]]></SCRIPT>
	</BUTTON>
	<BUTTON>
		<!-- REFRESH INFO -->
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<CARDTYPE>VDOCTYPETEMPLATE</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEREFERENCE</CARDTYPE>
		<CARDTYPE>VDOCTYPEQUERY</CARDTYPE>
		<CARDTYPE>VDOCTYPEPUBLICATION</CARDTYPE>
		<INPUT type="button" NAME="Refresh" onClick="refresh()" VALUE="Refresh" CLASS="button" ICON="UIFramework/refresh.32x32.png" SHOWTEXT="Y"/>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		function refresh()
		{
			var form = parent.DataFrame;
			if (form !=null)
			{
				parent.DataFrame.RefreshData();
			}
		}
		]]></SCRIPT>
	</BUTTON>
	<BUTTON CHECKACCESS="Y">
		<!-- NEW -->
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<CARDTYPE>VDOCTYPETEMPLATE</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEPUBLICATION</CARDTYPE>
		<INPUT type="button" NAME="Add" onClick="AddCard()" VALUE="New Object" CLASS="button" ICON="UIFramework/document_add.32x32.png"/>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		function AddCard()
		{
			if (InitialStates.length != 0 )
			{
				var form = parent.DataFrame.document.FolderContentData;
				
				if (form !=null)
				{
					DoDocumentOperation('ADD', form.FolderType.value, '', form.FOLDER.value, 	form.FolderUsrGrp.value, 'TOP',  1);
				}
			}
			else
			{
				alert("You do not have sufficient rights to create objects of this type ( initial states are not defined)");
			}
		}
		]]></SCRIPT>
	</BUTTON>
	<BUTTON CHECKACCESS="Y">
		<!-- PROPERTIES -->
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<CARDTYPE>VDOCTYPETEMPLATE</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEREFERENCE</CARDTYPE>
		<CARDTYPE>VDOCTYPEQUERY</CARDTYPE>
		<CARDTYPE>VDOCTYPEPUBLICATION</CARDTYPE>
		<INPUT type="button" NAME="Properties" onClick="ModifyCard()" VALUE="Properties" CLASS="button" ICON="UIFramework/properties.32x32.png"/>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		function ModifyCard()
		{
			var form = parent.DataFrame.document.FolderContentData;
			
			if (form !=null)
			{
				var card = getSelectedTop(form);
				if (card == "-1")
				{
					alert("Please select an object");
				}
				else
				{
					var index = getIndexById(card);
					var CardTypes= parent.DataFrame.CardTypes;
					if (index != -1)
					{
						DoDocumentOperation('MODIFY', CardTypes[index], card, card, form.FolderUsrGrp.value, 'TOP',  1);
					}
				}
			}
		}
		]]></SCRIPT>
	</BUTTON>
	<BUTTON CHECKACCESS="Y">
		<!-- DELETE -->
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<CARDTYPE>VDOCTYPETEMPLATE</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEPUBLICATION</CARDTYPE>
		<INPUT type="button" NAME="Delete" onClick="DeleteCard()" VALUE="Delete" CLASS="button" ICON="UIFramework/delete.32x32.png"/>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		function DeleteCard()
		{
			var form = parent.DataFrame.document.FolderContentData;
			var lArray ;
			var i;
						 var j;
			var CardIds;
			var Total ;
				
				Total = 0 ;
				CardIds="";
				
			if (form !=null)
			{
			
				var SelectedCards = parent.DataFrame.aDragLogicalArray;
			
				for( i = 0, j=0, lArray=SelectedCards; i < lArray.length ; i++)
				{
					if (lArray[i] != undefined)
					{
						IPos = lArray[i].lastIndexOf("|");
						if (IPos>-1)
						{
							if (Total++==0)
								
								CardIds= lArray[i].substring(IPos+1) ;
							else
								CardIds= CardIds.toString() + ', ' + lArray[i].substring(IPos+1);
						}
					}
				}
				
				if (CardIds.length == "0")
				{
					alert("Please select an object");
				}
				else
				{
					DoDocumentOperation('DELETE', form.FolderType.value, CardIds, CardIds, form.FolderUsrGrp.value, 'TOP',  SelectedCards.length);
				}
			 }
			 }
		]]></SCRIPT>
	</BUTTON>
	<BUTTON>
		<!-- PREVIEW for map, module, library-->
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPETEMPLATE</CARDTYPE>
		<INPUT type="button" NAME="Preview" onClick="preview(this)" VALUE="Preview" CLASS="button" ICON="UIFramework/preview.32x32.png"/>
		<SCRIPT LANGUAGE="JAVASCRIPT">
				<![CDATA[
				
		function preview(button)
		{
			var form = parent.DataFrame.document.FolderContentData;      			
			if (form !=null)
			{
				var card = getSelectedTop(form);
				if (card == "-1")
				{
					alert("Please select an object");
					return;
				}
				var index = getIndexById(card);
				var cardTypes= parent.DataFrame.CardTypes;	
				var cardType = cardTypes[index];
				
				$.ajax({
						url: "/" + params.infoShareAuthorWebAppName + "/GetLatestVersionInfo.asp",
						type: "GET",
						data: {"DocumentId": card},
						success: function (jsonresult) 
						{ 
							if (jsonresult.errorNumber != 0) 
							{
								InfoShareXopus.showErrorDialog(jsonresult.errorNumber, jsonresult.errorMessage);
							}
							else
							{
								doPreview(button, jsonresult, cardType);
							}
						},
						error: function (xhr) { InfoShareXopus.errorHandler(xhr, null); }          
					});
			}
		}
		
		function doPreview(button, objlatestVersionInfo, cardType)
		{			
			var WindowStr = "dependent=yes,toolbar=yes,width=800,height=600,resizable=yes,scrollbars=auto,menubar=no,status=yes";
			var sUrl = "WorkArea/Content/ChangeTrackerPreview?languageCardId=" + objlatestVersionInfo.lngCardId;
			if (cardType == "CTIMG" || cardType == "CTTEMPLATE") {
				linkWindow = window.open("LoadingPreview.html","",WindowStr);
				var doc = $(linkWindow.document);
				doc.ready(function() {
					setTimeout(function() {
						linkWindow.location = sUrl;
					}, 600);
				});
			} else {
				linkWindow = window.open(sUrl,"",WindowStr);
			}
			linkWindow.focus();
		}

		]]></SCRIPT>
	</BUTTON>
	<BUTTON>
		<!-- PREVIEW for illustrations -->
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<INPUT type="button" NAME="Preview" onClick="preview(this)" VALUE="Preview" CLASS="button" ICON="UIFramework/preview.32x32.png"/>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		
		function preview(button)
		{
			var form = parent.DataFrame.document.FolderContentData;      			
			if (form !=null)
			{
				var card = getSelectedTop(form);
				if (card == "-1")
				{
					alert("Please select an object");
					return;
				}				
				
				$.ajax({
						url: "/" + params.infoShareAuthorWebAppName + "/GetLatestVersionInfo.asp",
						type: "GET",
						data: {"DocumentId": card},
						success: function (jsonresult) 
						{ 
							if (jsonresult.errorNumber != 0) 
							{
								InfoShareXopus.showErrorDialog(jsonresult.errorNumber, jsonresult.errorMessage);
							}
							else
							{
								doPreview(button, jsonresult);
							}
						},
						error: function (xhr) { InfoShareXopus.errorHandler(xhr, null); }          
					});
			}
		}
		
		function doPreview(button, objlatestVersionInfo)
		{			
			var WindowStr = "dependent=yes,toolbar=yes,width=800,height=600,resizable=yes,scrollbars=auto,menubar=no,status=yes";
			var sUrl = "WorkArea/Content/ChangeTrackerPreview?logicalId=" + objlatestVersionInfo.logicalId;
			linkWindow = window.open("LoadingPreview.html","",WindowStr);
			var doc = $(linkWindow.document);
			doc.ready(function() {
				setTimeout(function() {
					linkWindow.location = sUrl;
				}, 600);
			});
			linkWindow.focus();
		}
				
		]]></SCRIPT>
	</BUTTON>
	
	<!-- XOPUS ADD "CHECK OUT WITH XOPUS" START -->	
	<BUTTON CHECKACCESS="Y">
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<INPUT type="button" NAME="CheckOutWithXopus" onClick="checkOutXopus(this)" VALUE="Check Out" CLASS="button" ICON="UIFramework/check-out.32x32.png"/>
		<SCRIPT language="javascript" type="text/javascript">
				<![CDATA[
							
					function checkOutXopus(button) {
						var form = parent.DataFrame.document.FolderContentData;      			
						if (form !=null)
						{
							var card = getSelectedTop(form);
							if (card == "-1")
							{
								alert("Please select an object");
								return;
							}
														
							$.ajax({
									url: "/" + params.infoShareAuthorWebAppName + "/GetLatestVersionInfo.asp",
									type: "GET",
									data: {"DocumentId": card},
									success: function (jsonresult) 
									{ 
										if (jsonresult.errorNumber != 0) 
										{
											InfoShareXopus.showErrorDialog(jsonresult.errorNumber, jsonresult.errorMessage);
										}
										else
										{
											doCheckoutWithXopus(button, jsonresult);
										}
									},
									error: function (xhr) { InfoShareXopus.errorHandler(xhr, null); }          
								});
						}
					}

					function doCheckoutWithXopus(button, objlatestVersionInfo)
					{						  			              			                
							var defaultParams = $.param({ 
								 Cmd: "checkoutwithxopus", 
								 Card: objlatestVersionInfo.lngCardId,
								 Vid: objlatestVersionInfo.versionCardId,
								 Name: objlatestVersionInfo.logicalId,
								 OType: objlatestVersionInfo.objectType,
								 DName: objlatestVersionInfo.logicalId,
								 UsrGrp: objlatestVersionInfo.userGroup,
								 Vers: objlatestVersionInfo.version,								 
								 AV: (canAddVersion(objlatestVersionInfo.version, objlatestVersionInfo.allVersions) ? "1" : "0"),
								 NewBranch: nextBranchOnVersion(objlatestVersionInfo.version, objlatestVersionInfo.allVersions),
								 BrP: getBranchPart(objlatestVersionInfo.version)
							});							
				
							var originalButtonIcon = $(button).find("img").attr("src");        
							$(button).find("img").attr("src", "UIFramework/loader.gif");
			 
							var addVersionAction = "/" + params.infoShareAuthorWebAppName + "/AddVersionAuto.asp?" + defaultParams + "&" + $.param({ Act: "AddVersion" });
							var addBranchAction = "/" + params.infoShareAuthorWebAppName + "/AddVersionAuto.asp?" + defaultParams + "&" + $.param({ Act: "Branch" });        
			
							InfoShareXopus.canCheckOut(objlatestVersionInfo.lngCardId, addVersionAction, addBranchAction, !canAddVersion(objlatestVersionInfo.version, objlatestVersionInfo.allVersions), function() {
								 $(button).find("img").attr("src", originalButtonIcon);								 
							});

				 }
			]]></SCRIPT>
	</BUTTON>
	<!-- XOPUS ADD "CHECK OUT WITH XOPUS" END -->	

	<!-- XOPUS ADD "UNDO CHECK OUT" START - The customer might want to add this button when Xopus is used. If they only want to undo check out XML objects from within Xopus the button is only needed when something goes wrong, so comment out this button when appropriate -->
	<BUTTON CHECKACCESS="Y">
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<INPUT type="button" NAME="undoCheckOut" onClick="undoCheckout(this)" VALUE="Undo Check Out" CLASS="button" ICON="UIFramework/undo-check-out.32x32.png"/>
		<SCRIPT language="javascript" type="text/javascript"><![CDATA[
		function undoCheckout(button)
		{
			var form = parent.DataFrame.document.FolderContentData;      			
			if (form !=null)
			{
				var card = getSelectedTop(form);
				if (card == "-1")
				{
					alert("Please select an object");
					return;
				}								
				
				$.ajax({
					url: "/" + params.infoShareAuthorWebAppName + "/GetLatestVersionInfo.asp",
					type: "GET",
					data: {"DocumentId": card},
					success: function (jsonresult) 
					{ 
						if (jsonresult.errorNumber != 0) 
						{
							InfoShareXopus.ui.showErrorDialog(jsonresult.errorNumber, jsonresult.errorMessage);
						}
						else
						{
							doUndoCheckout(button, jsonresult);
						}
					},
					error: function (xhr) { InfoShareXopus.server.errorHandler(xhr, null); }                    
				});				
			}

			function doUndoCheckout(button, objlatestVersionInfo)
			{			
				var ishTop = getIShTopWindow();
				ishTop.DocumentLoad.location =  "/" + params.infoShareAuthorWebAppName + "/undoCheckOut.asp?Card=" + objlatestVersionInfo.lngCardId;		
			}
		}
		]]></SCRIPT>
	</BUTTON>
	<!-- XOPUS ADD "UNDO CHECK OUT" END -->	


	<BUTTON>
		<!-- REPORTS -->
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEREFERENCE</CARDTYPE>
		<CARDTYPE>VDOCTYPEQUERY</CARDTYPE>
		<CARDTYPE>VDOCTYPETEMPLATE</CARDTYPE>
		<INPUT type="button" NAME="Reports" onClick="ShowReports()" VALUE="Reports" CLASS="button" ICON="UIFramework/reports.32x32.png"/>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		function ShowReports()
		{
			var form = parent.DataFrame.document.FolderContentData;
			
			if (form !=null)
			{
				var card = getSelectedTop(form);
				var WindowStr = "dependent=yes,toolbar=no,width=" + screen.availWidth +",height=" + screen.availHeight + ",resizable=yes,top=0,left=0,scrollbars=auto,menubar=no,status=yes";
				if (card == "-1")
				{
					alert("Please select an object");
				}
				else
				{
					var index = getIndexById(card);
					var CardTypes= parent.DataFrame.CardTypes;
					ReportWindow = window.open("ReportsWindow.asp?TopElement=" + card + "&TopType=" + escape(CardTypes[index]), "ReportWindow", WindowStr);
					ReportWindow.resizeTo(screen.availWidth,screen.availHeight);
					ReportWindow.focus();
				}
			}
		}
		]]></SCRIPT>
	</BUTTON>
	<BUTTON>
		<!-- GET LINK -->
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEREFERENCE</CARDTYPE>
		<CARDTYPE>VDOCTYPEQUERY</CARDTYPE>
		<CARDTYPE>VDOCTYPETEMPLATE</CARDTYPE>
		<CARDTYPE>VDOCTYPEPUBLICATION</CARDTYPE>
		<INPUT type="button" NAME="Get Link" onClick="GetLink()" VALUE="Copy Link" CLASS="button" ICON="UIFramework/copy-uri.32x32.png"/>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		function GetLink()
		{
			var form = parent.DataFrame.document.FolderContentData;
			var ishTop = getIShTopWindow();
			
			if (form !=null)
			{
				var card = getSelectedTop(form);
				if (card == "-1")
				{
					alert("Please select an object");
				}
				else
				{
						if (ishTop.TryCopyToClipboard(card))
						alert('Link copied to clipboard');
				}
			}
		}
		]]></SCRIPT>
	</BUTTON>
	<!--	<BUTTON>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<INPUT type="button" NAME="Generate Index" onClick="GenerateIndex()" VALUE="Generate Index" CLASS="button"/>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		function GenerateIndex()
		{
			var form = parent.DataFrame.document.FolderContentData;
			
			if (form !=null)
			{
				var WindowStr = "dependent=yes,toolbar=yes,width=550,resizable=yes,scrollbars=auto,menubar=no,status=yes";
				var card = getSelectedTop(form);
				if (card == "-1")
				{
					alert("Please select a document");
				}
				else
				{
					var URL = "RequestIndex.asp?Master=" + card + "&Columns=1" ;
					RequestIndex= window.open(URL,"RequestIndex",WindowStr);
					RequestIndex.focus()
				}
			}
		}
		]]></SCRIPT>
	</BUTTON>
-->
	<!--
	<BUTTON>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<INPUT type="button" NAME="Export" onClick="ExportDocument()" VALUE="Export For Publication" CLASS="button"/>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		function ExportDocument()
		{
			var form = parent.DataFrame.document.FolderContentData;
			
			if (form !=null)
			{
				var WindowStr = "dependent=yes,toolbar=no,width=320,height=450,resizable=yes,scrollbars=auto,menubar=no,status=yes";
				var card = getSelectedTop(form);
				if (card == "-1")
				{
					alert("Please select a document");
				}
				else
				{
					var URL = "Export4Publ/ExportForPublDlg.asp?Card=" + card;
					ExportWindow= window.open(URL,"Move",WindowStr);
					ExportWindow.focus() ;
				}
			}
		}
		]]></SCRIPT>
	</BUTTON>
-->
	<BUTTON CHECKACCESS="Y">
		<!-- MOVE -->
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<CARDTYPE>VDOCTYPETEMPLATE</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEPUBLICATION</CARDTYPE>
		<INPUT type="button" NAME="Move" onClick="MoveDocument()" VALUE="Move Object" class="button" ICON="UIFramework/document_move.32x32.png" SHOWTEXT="Y"/>
		<SCRIPT language="JAVASCRIPT">
				 <![CDATA[
		function MoveDocument()
		{
			var iPos;
			var FolderName;
			var FolderId;
			var FolderPath;
			var FolderUsergroup;
			var FolderType;
			var SelectedCards = parent.DataFrame.aDragLogicalArray;
			var SelectedCard;

			SelectedCard ='';
								
			FolderId = parent.DataFrame.document.FolderContentData.FOLDER.value;
			FolderName = parent.DataFrame.document.FolderContentData.CurrentFolderName.value;	
			FolderPath=parent.DataFrame.document.FolderContentData.PathNames.value;
			IPos=FolderPath.lastIndexOf("|");
			if (IPos>0) FolderPath=FolderPath.substring(IPos+1);
			
			FolderUsergroup = parent.DataFrame.document.FolderContentData.FolderUsrGrp.value;
			FolderType =  parent.DataFrame.document.FolderContentData.FolderType.value; 

			for( i = 0, j=0, lArray=parent.DataFrame.aDragLogicalArray; i < parent.DataFrame.aDragLogicalArray.length ; i++)
			{
				if (lArray[i] != undefined)
				{
					IPos = lArray[i].lastIndexOf("|");
					if (IPos > 0) SelectedCard= lArray[i].substring(IPos+1)
				}
			}
			
			var WindowStr = "dependent=yes,toolbar=no,width=450,height=250,resizable=yes,scrollbars=auto,menubar=no,status=yes";
		
			if (SelectedCard.length==0)
			{
				alert("Please select an object");
			}
			else
			{
				FolderAssistForObjects('Move objects', FolderId, FolderName, FolderUsergroup, FolderType, FolderPath, 'PerformMoveObjects()', '');
			}
		}
		]]></SCRIPT>
	</BUTTON>
	<BUTTON>
		<!-- LOCATE -->
		<CARDTYPE>VDOCTYPEQUERY</CARDTYPE>
		<CARDTYPE>VDOCTYPEREFERENCE</CARDTYPE>
		<INPUT type="button" NAME="Locate" onClick="locate()" VALUE="Go to Location" CLASS="button" ICON="UIFramework/locate.32x32.png"/>
		<SCRIPT LANGUAGE="JAVASCRIPT"><![CDATA[
		function locate()
		{
			var form = parent.DataFrame.document.FolderContentData;	
			var Top = getSelectedTop(form);
			if (Top < 1)
			{
				alert("Please select an object");
			}
			else
			{
					LocateInTree(Top);
			}
		}
		]]></SCRIPT>
	</BUTTON>
	<BUTTON CHECKACCESS="Y">
		<!-- CREATE SHORTCUT -->
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<CARDTYPE>VDOCTYPEMAP</CARDTYPE>
		<CARDTYPE>VDOCTYPEMASTER</CARDTYPE>
		<CARDTYPE>VDOCTYPETEMPLATE</CARDTYPE>
		<CARDTYPE>VDOCTYPELIB</CARDTYPE>
		<CARDTYPE>VDOCTYPEPUBLICATION</CARDTYPE>
		<CARDTYPE>VDOCTYPEQUERY</CARDTYPE>
		<INPUT type="button" NAME="Shortcut" onClick="AddShortcut()" VALUE="Create Shortcut" CLASS="button" ICON="UIFramework/document_shortcut.32x32.png" SHOWTEXT="Y"/>
			<SCRIPT language="javascript" src="FolderAssist/FolderButton.js"/>
			<SCRIPT LANGUAGE="JAVASCRIPT">
						<![CDATA[
		function AddShortcut()
		{
			var iPos;
			var FolderName;
			var FolderUsergroup;
			var FolderId;
				 var FolderType='VDOCTYPEREFERENCE';
			var FolderPath;
			var SelectedCards = parent.DataFrame.aDragLogicalArray;
			var SelectedCard;

			SelectedCard ='';
									
			FolderId = parent.DataFrame.document.FolderContentData.FOLDER.value;
			FolderName = parent.DataFrame.document.FolderContentData.CurrentFolderName.value;	
			FolderUsergroup = ''; // UserGroup is empty for a reference! parent.DataFrame.document.FolderContentData.FolderUsrGrp.value;
			FolderPath=parent.DataFrame.document.FolderContentData.PathNames.value;
			IPos=FolderPath.lastIndexOf("|");
			if (IPos>0) FolderPath=FolderPath.substring(IPos+1);

			for( i = 0, j=0, lArray=parent.DataFrame.aDragLogicalArray; i < parent.DataFrame.aDragLogicalArray.length ; i++)
			{
				if (lArray[i] != undefined)
				{
					IPos = lArray[i].lastIndexOf("|");
					if (IPos > 0) SelectedCard= lArray[i].substring(IPos+1)
				}
			}
			
			if (SelectedCard.length==0)
			{
				alert("Please select an object");
			}
			else
			{
				FolderAssistForObjects('Create shortcut', FolderId, FolderName, FolderUsergroup, FolderType, FolderPath, 'PerformCreateShortcut()', '');
			}
		}
		]]></SCRIPT>
	</BUTTON>
	<BUTTON CHECKACCESS="Y">
		<!-- REMOVE SHORTCUT -->
		<CARDTYPE>VDOCTYPEREFERENCE</CARDTYPE>
		<INPUT type="button" NAME="Remove" onClick="RemoveShortcut()" VALUE="Delete Shortcut" CLASS="button" ICON="UIFramework/delete.32x32.png"/>
		<SCRIPT LANGUAGE="JAVASCRIPT">
							 <![CDATA[
		function RemoveShortcut()
		{
			var form = parent.DataFrame.document.FolderContentData;
			
			if (form !=null)
			{
				var card = getSelectedTop(form);
				 var SelectedCards = parent.DataFrame.aDragLogicalArray;
				var folder = parent.DataFrame.document.FolderContentData.FOLDER.value ;
				 if (SelectedCards.length==0)
				 {
					alert("Please select an object");
				}
				else
				{
					var index = getIndexById(card);
					var CardTypes= parent.DataFrame.CardTypes;
					DoDocumentOperation('REMOVESHORTCUT', CardTypes[index], card, folder, form.FolderUsrGrp.value, 'TOP',  1);
				}
			}
		}
		]]></SCRIPT>
	</BUTTON>
	<BUTTON>
		<!-- THUMBNAILS -->
		<CARDTYPE>VDOCTYPEILLUSTRATION</CARDTYPE>
		<INPUT type="button" NAME="Thumbnails" onClick="ShowThumbnails()" VALUE="Thumbnails" CLASS="button" ICON="UIFramework/thumbnails.32x32.png" SHOWTEXT="Y"/>
		<SCRIPT LANGUAGE="JAVASCRIPT">
			<![CDATA[
		function ShowThumbnails()
		{
			var form = parent.DataFrame.document.FolderContentData;			
			
			if (form !=null)
			{
				var WindowStr = "width=800,height=600,toolbar=yes,status=yes,menubar=no,scrollbars=yes,resizable=yes,directories=no,location=no";
				var folderId = escape(form.FOLDER.value);
				var folderPath = escape(form.PathNames.value);
				
				var URL = "Thumbnails/ThumbnailsIFrame.asp?folder=" + folderId + "&path=" + folderPath;
				
				// window name is combned path, | is not supported
				ThumbnailWindow = window.open(URL,form.PathNames.value.replace(/[^a-zA-Z\d:]/g, '_'),WindowStr);
				ThumbnailWindow.focus();
			}
		}
		]]></SCRIPT>
	</BUTTON>
</BUTTONBAR>
